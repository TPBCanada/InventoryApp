<?php
session_start();
include 'dbinv.php';

ini_set('display_errors','1');
ini_set('display_startup_errors','1');
error_reporting(E_ALL);

if (!function_exists('str_starts_with')) {
  function str_starts_with($haystack, $needle) {
    if ($needle === '') return true;
    return strncmp($haystack, $needle, strlen($needle)) === 0;
  }
}

// auth
if (!isset($_SESSION['username'])) {
  header("Location: login.php");
  exit;
}

$user_id  = isset($_SESSION['user_id']) ? (int)$_SESSION['user_id'] : null;
$username = $_SESSION['username'] ?? 'User';
$role_id  = (int)($_SESSION['role_id'] ?? 0);

// Restrict access to admins only
$allowed_roles = [1, 2];
if (!in_array($_SESSION['role_id'] ?? null, $allowed_roles, true)) {
    die("<p style='color:red; text-align:center; font-size:18px; margin-top:50px;'>
        Access denied. Only certain roles can access this page.
    </p>");
}

function h($v){ return htmlspecialchars((string)$v, ENT_QUOTES, 'UTF-8'); }

$message   = "";
$PAGE_SIZE = 20; // initial server-rendered rows and lazy-load batch size

// --- AJAX endpoint for lazy-load batches ---
if (isset($_GET['ajax']) && $_GET['ajax'] === '1') {
    header('Content-Type: application/json; charset=utf-8');

    $offset = max(0, (int)($_GET['offset'] ?? 0));
    $limit  = min(200, max(1, (int)($_GET['limit'] ?? $PAGE_SIZE)));

    $total = 0;
    if ($total_res = mysqli_query($conn, "SELECT COUNT(*) AS c FROM location")) {
        $total_row = mysqli_fetch_assoc($total_res);
        $total = (int)($total_row['c'] ?? 0);
    }

    $rows = [];
    if ($stmt = mysqli_prepare($conn, "SELECT loc_id, row_code, bay_num, level_code, side, bin_code
                                       FROM location
                                       ORDER BY loc_id DESC
                                       LIMIT ? OFFSET ?")) {
        mysqli_stmt_bind_param($stmt, 'ii', $limit, $offset);
        mysqli_stmt_execute($stmt);
        $res = mysqli_stmt_get_result($stmt);
    } else {
        // Fallback if prepare isn't supported in your MySQL version for LIMIT bind
        $limit  = (int)$limit;
        $offset = (int)$offset;
        $res = mysqli_query($conn, "SELECT loc_id, row_code, bay_num, level_code, side, bin_code
                                    FROM location
                                    ORDER BY loc_id DESC
                                    LIMIT {$limit} OFFSET {$offset}");
    }

    if ($res) {
        while ($r = mysqli_fetch_assoc($res)) {
            $rows[] = [
                'loc_id'     => (int)$r['loc_id'],
                'row_code'   => (string)$r['row_code'],
                'bay_num'    => (string)$r['bay_num'],
                'level_code' => (string)$r['level_code'],
                'side'       => (string)$r['side'],
                'bin_code'   => (string)($r['bin_code'] ?? ''),
            ];
        }
    } else {
        echo json_encode(['error' => mysqli_error($conn)]);
        exit;
    }

    echo json_encode([
        'rows'    => $rows,
        'offset'  => $offset,
        'limit'   => $limit,
        'total'   => $total,
        'hasMore' => ($offset + $limit) < $total,
    ]);
    exit;
}


// ---------- POST HANDLERS ----------
if (isset($_POST['add_location'])) {
    $row_code   = mysqli_real_escape_string($conn, $_POST['row_code'] ?? '');
    $bay_num    = mysqli_real_escape_string($conn, $_POST['bay_num'] ?? '');
    $level_code = mysqli_real_escape_string($conn, $_POST['level_code'] ?? '');
    $side       = mysqli_real_escape_string($conn, $_POST['side'] ?? '');

    if ($side === 'F') $side = 'Front';
    if ($side === 'B') $side = 'Back';

    $query = "INSERT INTO location (row_code, bay_num, level_code, side, created_at)
              VALUES ('$row_code', '$bay_num', '$level_code', '$side', NOW())";

    if (mysqli_query($conn, $query)) {
        $message = "✅ Location added successfully.";
    } else {
        $message = "❌ Error: " . mysqli_error($conn);
    }
}

if (isset($_GET['delete'])) {
    $loc_id = intval($_GET['delete']);
    mysqli_query($conn, "DELETE FROM location WHERE loc_id = $loc_id");
    header("Location: manage_location.php");
    exit;
}

if (isset($_POST['update_location'])) {
    $loc_id     = intval($_POST['loc_id'] ?? 0);
    $row_code   = mysqli_real_escape_string($conn, $_POST['row_code'] ?? '');
    $bay_num    = mysqli_real_escape_string($conn, $_POST['bay_num'] ?? '');
    $level_code = mysqli_real_escape_string($conn, $_POST['level_code'] ?? '');
    $side       = mysqli_real_escape_string($conn, $_POST['side'] ?? '');

    if ($side === 'F') $side = 'Front';
    if ($side === 'B') $side = 'Back';

    $query = "UPDATE location 
              SET row_code='$row_code', 
                  bay_num='$bay_num', 
                  level_code='$level_code', 
                  side='$side'
              WHERE loc_id='$loc_id'";

    if (!mysqli_query($conn, $query)) {
        $message = "❌ Update error: " . mysqli_error($conn);
    } else {
        header("Location: manage_location.php");
        exit;
    }
}

// ---------- INITIAL PAGE DATA (first batch only) ----------
$total_res = mysqli_query($conn, "SELECT COUNT(*) AS c FROM location");
$total_row = mysqli_fetch_assoc($total_res);
$total     = (int)($total_row['c'] ?? 0);

$initial_res = mysqli_query(
    $conn,
    "SELECT loc_id, row_code, bay_num, level_code, side, bin_code
     FROM location
     ORDER BY loc_id DESC
     LIMIT {$PAGE_SIZE} OFFSET 0"
);

// ---------- PAGE LAYOUT WIRING ----------
$title    = 'Manage Locations';
$BASE_URL = rtrim(dirname($_SERVER['SCRIPT_NAME']), '/');
$extra_head = <<<HTML
<link rel="stylesheet" href="{$BASE_URL}/css/site.css?v=1">
<style>
  /* small helper to show the loader nicely */
  .infinite-loader{ display:flex; align-items:center; justify-content:center; padding:16px; color:#666; }
  .infinite-done{ text-align:center; padding:12px; color:#666; }
  .table-wrap{ position:relative; }
</style>
HTML;

ob_start();
?>
  <h2 class="title" style="margin:0;">Manage Warehouse Locations</h2>
  <span class="small">Admin-only</span>

  <?php if ($message): ?>
    <?php
      $isGood = str_starts_with($message, '✅');
      $isBad  = str_starts_with($message, '❌');
      $cls = $isGood ? 'message message--good' : ($isBad ? 'message message--bad' : 'message');
    ?>
    <div class="card card--pad <?= h($cls) ?>" style="margin-top:12px;">
      <?= h($message) ?>
    </div>
  <?php endif; ?>

  <!-- Add Location -->
  <section class="card card--pad" style="margin-top:16px;">
    <h3 style="margin:0 0 10px">Add New Location</h3>
    <form class="form" method="POST">
      <div class="form-row" style="display:grid;grid-template-columns:repeat(4,1fr) auto;gap:8px;">
        <input class="input" type="text" name="row_code" placeholder="Row Code" required>
        <input class="input" type="text" name="bay_num" placeholder="Bay Number" required>
        <input class="input" type="text" name="level_code" placeholder="Level Code" required>
        <select class="select" name="side" required>
          <option value="F">Front (F)</option>
          <option value="B">Back (B)</option>
        </select>
        <button class="btn btn--primary" type="submit" name="add_location">Add Location</button>
      </div>
    </form>
  </section>

  <!-- Location Table -->
  <section class="card card--pad" style="margin-top:16px;">
    <div class="table-wrap">
      <table class="table">
        <thead>
          <tr>
            <th>Row Code</th>
            <th>Bay Number</th>
            <th>Level Code</th>
            <th>Side</th>
            <th>Bin Code</th>
            <th style="min-width:160px;">Actions</th>
          </tr>
        </thead>
        <tbody id="locTbody">
<?php while ($row = mysqli_fetch_assoc($initial_res)) :
  $short_side = ($row['side'] === 'Front') ? 'F' : 'B';
  $form_id = 'form-' . (int)$row['loc_id'];
?>
  <tr>
    <td><input class="input" type="text" name="row_code" value="<?= h($row['row_code']) ?>" form="<?= h($form_id) ?>"></td>
    <td><input class="input" type="text" name="bay_num" value="<?= h($row['bay_num']) ?>" form="<?= h($form_id) ?>"></td>
    <td><input class="input" type="text" name="level_code" value="<?= h($row['level_code']) ?>" form="<?= h($form_id) ?>"></td>
    <td>
      <select class="select" name="side" form="<?= h($form_id) ?>">
        <option value="F" <?= $short_side === 'F' ? 'selected' : '' ?>>Front (F)</option>
        <option value="B" <?= $short_side === 'B' ? 'selected' : '' ?>>Back (B)</option>
      </select>
    </td>
    <td><input class="input" type="text" name="bin_code" value="<?= h($row['bin_code']) ?>" readonly form="<?= h($form_id) ?>"></td>
    <td class="actions" style="display:flex;gap:8px;align-items:center;">
      <form id="<?= h($form_id) ?>" method="POST">
        <input type="hidden" name="loc_id" value="<?= (int)$row['loc_id'] ?>">
        <button class="btn btn--ghost" type="submit" name="update_location">Update</button>
        <a class="link-danger" href="manage_location.php?delete=<?= (int)$row['loc_id'] ?>" onclick="return confirm('Delete this location?')">Delete</a>
      </form>
    </td>
  </tr>
<?php endwhile; ?>
</tbody>

      </table>

      <!-- Lazy-load sentinel + loader -->
      <div id="lazySentinel" class="infinite-loader" aria-live="polite">
        Loading more locations…
      </div>
      <div id="lazyDone" class="infinite-done" hidden>
        All locations loaded (<?= (int)$total ?>).
      </div>
    </div>
    <p class="small" style="margin:10px 0 0">
      Tip: Edit inline and click <strong>Update</strong> per row.
    </p>
  </section>
<?php
$content = ob_get_clean();

$footer_js = <<<HTML
<script>
(function(){
  // Config from server
  const PAGE_SIZE   = {$PAGE_SIZE};
  const TOTAL_COUNT = {$total};
  let offset        = PAGE_SIZE;    // we've already rendered the first page
  let busy          = false;
  let done          = (offset >= TOTAL_COUNT);

  const tbody   = document.getElementById('locTbody');
  const sent    = document.getElementById('lazySentinel');
  const doneEl  = document.getElementById('lazyDone');

  if (done) {
    sent.hidden = true;
    doneEl.hidden = false;
    return;
  }

  async function fetchPage() {
    if (busy || done) return;
    busy = true;
    try {
      const url = new URL(window.location.href);
      url.searchParams.set('ajax', '1');
      url.searchParams.set('offset', String(offset));
      url.searchParams.set('limit',  String(PAGE_SIZE));

      const res = await fetch(url.toString(), { headers: { 'Accept': 'application/json' }});
      if (!res.ok) throw new Error('Network error');
      const data = await res.json();

      appendRows(data.rows || []);
      offset += data.rows?.length || 0;
      done = !data.hasMore;

      if (done) {
        sent.hidden = true;
        doneEl.hidden = false;
        observer && observer.disconnect();
      }
    } catch (err) {
      console.error(err);
      // degrade gracefully: stop observing to avoid loops
      observer && observer.disconnect();
      sent.textContent = 'Could not load more rows.';
    } finally {
      busy = false;
    }
  }

  function appendRows(rows){
  if (!rows || rows.length === 0) {
    // Prevent endless spinner if backend returns empty page unexpectedly
    done = true;
    sent.hidden = true;
    doneEl.hidden = false;
    observer && observer.disconnect();
    return;
  }

  for (const r of rows) {
    const tr = document.createElement('tr');
    const formId = 'form-' + r.loc_id;

    const tdInput = (name, value, readonly=false) => {
      const td = document.createElement('td');
      const input = document.createElement('input');
      input.className = 'input';
      input.type = 'text';
      input.name = name;
      input.value = value ?? '';
      input.setAttribute('form', formId);
      if (readonly) input.readOnly = true;
      td.appendChild(input);
      return td;
    };

    const tdSelectSide = (sideFull) => {
      const td = document.createElement('td');
      const select = document.createElement('select');
      select.className = 'select';
      select.name = 'side';
      select.setAttribute('form', formId);

      const short = (sideFull === 'Front') ? 'F' : 'B';
      const optF = document.createElement('option');
      optF.value = 'F'; optF.textContent = 'Front (F)';
      if (short === 'F') optF.selected = true;

      const optB = document.createElement('option');
      optB.value = 'B'; optB.textContent = 'Back (B)';
      if (short === 'B') optB.selected = true;

      select.append(optF, optB);
      td.appendChild(select);
      return td;
    };

    const tdActions = (locId) => {
      const td = document.createElement('td');
      td.className = 'actions';
      td.style.display = 'flex';
      td.style.gap = '8px';
      td.style.alignItems = 'center';

      const form = document.createElement('form');
      form.id = formId;
      form.method = 'POST';

      const hid = document.createElement('input');
      hid.type = 'hidden';
      hid.name = 'loc_id';
      hid.value = String(locId);

      const btn = document.createElement('button');
      btn.className = 'btn btn--ghost';
      btn.type = 'submit';
      btn.name = 'update_location';
      btn.textContent = 'Update';

      const del = document.createElement('a');
      del.className = 'link-danger';
      del.href = 'manage_location.php?delete=' + encodeURIComponent(String(locId));
      del.textContent = 'Delete';
      del.addEventListener('click', (e) => {
        if (!confirm('Delete this location?')) e.preventDefault();
      });

      form.appendChild(hid);
      form.appendChild(btn);
      form.appendChild(del);
      td.appendChild(form);
      return td;
    };

    tr.appendChild(tdInput('row_code',   r.row_code));
    tr.appendChild(tdInput('bay_num',    r.bay_num));
    tr.appendChild(tdInput('level_code', r.level_code));
    tr.appendChild(tdSelectSide(r.side));
    tr.appendChild(tdInput('bin_code',   r.bin_code, true));
    tr.appendChild(tdActions(r.loc_id));

    tbody.appendChild(tr);
  }
}



  // IntersectionObserver to trigger fetch near bottom
  const observer = new IntersectionObserver((entries) => {
    for (const entry of entries) {
      if (entry.isIntersecting) {
        fetchPage();
      }
    }
  }, {
    root: null,
    rootMargin: '600px 0px', // start loading a bit early
    threshold: 0
  });

  observer.observe(sent);
})();
</script>
HTML;

include __DIR__ . '/templates/layout.php';
